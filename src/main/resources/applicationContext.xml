<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:jee="http://www.springframework.org/schema/jee"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:util="http://www.springframework.org/schema/util"

	   xsi:schemaLocation="http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx 		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa  http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/aop 		http://www.springframework.org/schema/aop/spring-aop.xsd
       	http://www.springframework.org/schema/jdbc 		http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/util 		http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/jee 		http://www.springframework.org/schema/jee/spring-jee-2.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <context:component-scan base-package="com.devket"/>

	<util:properties id="jndiProperties" location="classpath:jndi.properties" />

	<!-- here are the client side JNDI lookups/config for JMS -->
	<jee:jndi-lookup id="jmsConnectionFactory"
					 jndi-name="jms/RemoteConnectionFactory"
					 cache="false"
					 lookup-on-startup="false"
	         		 expected-type="javax.jms.ConnectionFactory"
					 environment-ref="jndiProperties">
	</jee:jndi-lookup>

	<bean id="cachingConnectionFactory"
		  class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg index="0" ref="jmsConnectionFactory"/>
		<property name="sessionCacheSize" value="10"/>
	</bean>

	<jee:jndi-lookup id="destination"
					 jndi-name="jms/queue/credentialEngine"
	         		 expected-type="javax.jms.Destination"
					 environment-ref="jndiProperties">
	</jee:jndi-lookup>

	<!-- you'll need a different plan of attack if you ever have multiple destinations -->
	<bean id="jmsTemplate"
		  class="org.springframework.jms.core.JmsTemplate">
		<constructor-arg index="0" ref="cachingConnectionFactory"/>
		<property name="defaultDestination" ref="destination"/>
	</bean>

	<!-- Not needed for JMS prototype -->

    <!--<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"/>-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

	<!-- The GenericMapper is required to be stateless, so we only need one concrete bean. -->
	<!--<bean id="mapperSingleton" class="com.devket.common.GenericMapper" scope="singleton"/>-->

	<!--<jdbc:embedded-database id="dataSource" type="H2">-->
	<!--</jdbc:embedded-database>-->

	<!--<bean id="entityManagerFactory"-->
		  <!--class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
		<!--<property name="jpaVendorAdapter">-->
			<!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">-->
				<!--<property name="databasePlatform" value="org.hibernate.dialect.H2Dialect"/>-->
				<!--<property name="showSql" value="true"/>-->
				<!--<property name="generateDdl" value="true"/>-->
			<!--</bean>-->
		<!--</property>-->

		<!--<property name="packagesToScan">-->
			<!--<list>-->
				<!--<value>com.devket.domain</value> -->
			<!--</list>-->
		<!--</property>-->

		<!--<property name="jpaProperties">-->
			<!--<props>-->
				<!--<prop key="hibernate.hbm2ddl.auto">create-drop</prop>-->
				<!--<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>-->
				<!--<prop key="hibernate.max_fetch_depth">3</prop>-->
				<!--<prop key="hibernate.jdbc.fetch_size">50</prop>-->
				<!--<prop key="hibernate.jdbc.batch_size">10</prop>-->
				<!--<prop key="hibernate.show_sql">true</prop>-->
				<!--<prop key="hibernate.format_sql">true</prop>-->
				<!--<prop key="hibernate.ejb.naming_strategy">com.devket.common.NamingStrategy</prop>-->
			<!--</props>-->
		<!--</property>-->
		<!--<property name="dataSource" ref="dataSource"/>-->
	<!--</bean>-->

	<!--Scan these packages for Repository implementations  -->
	<!--<jpa:repositories base-package="com.devket.repository"/>-->

</beans>